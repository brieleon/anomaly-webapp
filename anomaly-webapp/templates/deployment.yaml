apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "anomaly-webapp.fullname" . }}
  labels:
    {{- include "anomaly-webapp.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "anomaly-webapp.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "anomaly-webapp.name" . }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.ports.web.targetPort }}
              name: web
          env:
            - name: REDIS_HOST
              value: "{{ .Values.env.REDIS_HOST }}"
            - name: REDIS_PORT
              value: "{{ .Values.env.REDIS_PORT }}"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.ports.web.targetPort }}
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.ports.web.targetPort }}
            initialDelaySeconds: 30
            periodSeconds: 20
            failureThreshold: 3
